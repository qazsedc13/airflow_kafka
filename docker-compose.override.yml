services:
  kafka:
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,DOCKER_HACK://kafka:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER_HACK:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    command: ["sh", "-c", "/usr/bin/kafka-topics --create --bootstrap-server kafka:9092,kafka:19092 --replication-factor 1 --partitions 1 --topic my_topic || true && /etc/confluent/docker/run"]
    networks:
      - my_network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8888:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:9092,DOCKER_HACK://kafka:19092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - my_network
  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - my_network
  scheduler:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - my_network
  webserver:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - my_network
  triggerer:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - my_network
  postgres:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - my_network
  
  kap_247_db:
    image: postgres:13
    environment:
      POSTGRES_USER: kap_user
      POSTGRES_PASSWORD: kap_password
      POSTGRES_DB: kap_data
    ports:
      - "5433:5432"  # Отличный порт от основного Postgres
    volumes:
      - kap_postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kap_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Добавляем коннекшен при инициализации Airflow
  init-kap-db:
    image: quay.io/astronomer/astro-runtime:9.0.0
    depends_on:
      - kap_247_db
      - webserver
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    command: >
      bash -c "
      airflow connections add 'kap_247_db' 
      --conn-type 'postgres' 
      --conn-host 'kap_247_db' 
      --conn-login 'kap_user' 
      --conn-password 'kap_password' 
      --conn-schema 'kap_data'
      "
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  kap_postgres_data: